package gui;

import communicationsBT.COMPortsEventListener;
import communicationsBT.COMPortsEventObject;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import main.ECGController;

/**
 * Interfaz principal de la aplicaci√≥n controladora
 * @author Borja Bordel
 * Proyecto Semola
 */
public class JController extends javax.swing.JFrame implements COMPortsEventListener {

    /**
     * Creates new form JController
     */
    public JController() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        COMportNumber = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        COMportSpeed = new javax.swing.JTextField();
        buttonBT = new javax.swing.JButton();
        buttonTCP = new javax.swing.JButton();
        buttonAll = new javax.swing.JButton();
        buttonInit = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextData = new javax.swing.JTextArea();
        buttonRX = new javax.swing.JButton();
        userState = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        alarmLevel = new javax.swing.JTextField();
        buttonTX = new javax.swing.JButton();
        buttonStart = new javax.swing.JButton();
        buttonStop = new javax.swing.JButton();
        buttonBTClose = new javax.swing.JButton();
        buttonTCPClose = new javax.swing.JButton();
        buttonCloseAll = new javax.swing.JButton();
        testCheck = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Electrocardiogram monitoring device");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("COM port number");

        COMportNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                COMportNumberActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("COM port speed");

        COMportSpeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                COMportSpeedActionPerformed(evt);
            }
        });

        buttonBT.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonBT.setText("Connect device");
        buttonBT.setToolTipText("");
        buttonBT.setEnabled(false);
        buttonBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBTActionPerformed(evt);
            }
        });

        buttonTCP.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonTCP.setText("Connect to server");
        buttonTCP.setToolTipText("");
        buttonTCP.setEnabled(false);
        buttonTCP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTCPActionPerformed(evt);
            }
        });

        buttonAll.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonAll.setText("Open all connections");
        buttonAll.setToolTipText("");
        buttonAll.setEnabled(false);
        buttonAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAllActionPerformed(evt);
            }
        });

        buttonInit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonInit.setText("Initiate system");
        buttonInit.setToolTipText("");
        buttonInit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonInitActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTextData.setColumns(20);
        jTextData.setRows(5);
        jTextData.setEnabled(false);
        jScrollPane1.setViewportView(jTextData);

        buttonRX.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonRX.setText("See recieved data from device");
        buttonRX.setToolTipText("");
        buttonRX.setEnabled(false);
        buttonRX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRXActionPerformed(evt);
            }
        });

        userState.setEnabled(false);
        userState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userStateActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("User state");
        jLabel6.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Alarm level");
        jLabel5.setEnabled(false);

        alarmLevel.setEnabled(false);
        alarmLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alarmLevelActionPerformed(evt);
            }
        });

        buttonTX.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonTX.setText("Send response");
        buttonTX.setToolTipText("");
        buttonTX.setEnabled(false);
        buttonTX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTXActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonRX)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(userState, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(37, 37, 37)
                            .addComponent(alarmLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(buttonTX)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(buttonRX)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(alarmLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(userState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(buttonTX)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        buttonStart.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonStart.setText("StartDevice");
        buttonStart.setToolTipText("");
        buttonStart.setEnabled(false);
        buttonStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonStartActionPerformed(evt);
            }
        });

        buttonStop.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonStop.setText("StoptDevice");
        buttonStop.setToolTipText("");
        buttonStop.setEnabled(false);
        buttonStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonStopActionPerformed(evt);
            }
        });

        buttonBTClose.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonBTClose.setText("Disconnect device");
        buttonBTClose.setToolTipText("");
        buttonBTClose.setEnabled(false);
        buttonBTClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBTCloseActionPerformed(evt);
            }
        });

        buttonTCPClose.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonTCPClose.setText("Disconnect from server");
        buttonTCPClose.setToolTipText("");
        buttonTCPClose.setEnabled(false);
        buttonTCPClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTCPCloseActionPerformed(evt);
            }
        });

        buttonCloseAll.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buttonCloseAll.setText("Disconnect all");
        buttonCloseAll.setToolTipText("");
        buttonCloseAll.setEnabled(false);
        buttonCloseAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCloseAllActionPerformed(evt);
            }
        });

        testCheck.setText("Test mode");
        testCheck.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(buttonInit))
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(COMportSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(COMportNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(buttonBT)
                                    .addComponent(buttonStart)
                                    .addComponent(buttonBTClose))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(buttonTCP)
                                            .addComponent(buttonTCPClose))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(buttonCloseAll)
                                            .addComponent(buttonAll)))
                                    .addComponent(buttonStop)))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(testCheck)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(jLabel1)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(COMportNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(COMportSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(buttonInit)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonBT)
                    .addComponent(buttonTCP)
                    .addComponent(buttonAll))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonBTClose)
                    .addComponent(buttonTCPClose)
                    .addComponent(buttonCloseAll))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonStart)
                    .addComponent(buttonStop))
                .addGap(18, 18, 18)
                .addComponent(testCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void COMportNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_COMportNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_COMportNumberActionPerformed

    private void COMportSpeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_COMportSpeedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_COMportSpeedActionPerformed

    private void buttonBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBTActionPerformed
        try {
            ECGController.getController().openCommunicationDevice();
            //Habilitamos los campos de trabajo con el dispositivo                        
            buttonStart.setEnabled(true);
            buttonBTClose.setEnabled(true);
            testCheck.setEnabled(true);
        } catch (IOException ex) {
            Logger.getLogger(JController.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al abrir el puerto", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buttonBTActionPerformed

    private void buttonTCPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTCPActionPerformed
        try {
            ECGController.getController().runClient();
            buttonTCPClose.setEnabled(true);
        } catch (IOException ex) {
            Logger.getLogger(JController.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al abrir el cliente", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buttonTCPActionPerformed

    private void buttonAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAllActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonAllActionPerformed

    private void buttonInitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonInitActionPerformed
        if (COMportNumber.getText()==null ||
            COMportSpeed.getText() == null) {
            JOptionPane.showMessageDialog(this, "Debe completar todos los campos", "Falta informaci√≥n", JOptionPane.WARNING_MESSAGE);
        } else {
            BTPortNumber = Integer.parseInt(COMportNumber.getText());
            BTSpeed = Integer.parseInt(COMportSpeed.getText()); 
            //Deshabilitamos campos
            COMportNumber.setEnabled(false);
            COMportSpeed.setEnabled(false);
            buttonBT.setEnabled(true);
            buttonTCP.setEnabled(true);
            buttonAll.setEnabled(true);
            ECGController.createControlller(BTPortNumber, BTSpeed);
        }
    }//GEN-LAST:event_buttonInitActionPerformed

    private void buttonRXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonRXActionPerformed

    private void alarmLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alarmLevelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_alarmLevelActionPerformed

    private void userStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userStateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userStateActionPerformed

    private void buttonTXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTXActionPerformed
        try {
            int nivelAlarma = Integer.parseInt(alarmLevel.getText());
            int estado = Integer.parseInt(userState.getText());
            ECGController.getController().transmiteResultados(estado, nivelAlarma);
        } catch (IOException ex) {
            Logger.getLogger(JController.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error en la comunicaci√≥n", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buttonTXActionPerformed

    private void buttonBTCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBTCloseActionPerformed
        try {
            ECGController.getController().closeCommunicationDevice();
            jLabel5.setEnabled(false);
            jLabel6.setEnabled(false);
            buttonBTClose.setEnabled(false);
            buttonRX.setEnabled(false);
            buttonTX.setEnabled(false);
            jTextData.setEnabled(false);
            userState.setEnabled(false);
            alarmLevel.setEnabled(false);
            buttonStart.setEnabled(false);
            testCheck.setEnabled(false);
            buttonStop.setEnabled(false);
        } catch (IOException ex) {
            Logger.getLogger(JController.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al cerrar", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buttonBTCloseActionPerformed

    private void buttonStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStartActionPerformed
        try {
            ECGController.getController().startDevice();
            ECGController.getController().subscribeDeviceEvents(this);
            buttonStop.setEnabled(true);
            if (testCheck.isSelected()) {
                 jLabel5.setEnabled(true);
                 jLabel6.setEnabled(true);
                 buttonRX.setEnabled(true);
                 buttonTX.setEnabled(true);
                 jTextData.setEnabled(true);
                 userState.setEnabled(true);
                 alarmLevel.setEnabled(true);
            } else {
                // No hay acciones asociadas
            }
        } catch (IOException ex) {
            Logger.getLogger(JController.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al iniciar el dispositivo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buttonStartActionPerformed

    private void buttonStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStopActionPerformed
        try {
            ECGController.getController().stopDevice();
            jLabel5.setEnabled(false);
            jLabel6.setEnabled(false);
            buttonRX.setEnabled(false);
            buttonTX.setEnabled(false);
            jTextData.setEnabled(false);
            userState.setEnabled(false);
            alarmLevel.setEnabled(false);
        } catch (IOException ex) {
            Logger.getLogger(JController.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al parar el dispositivo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buttonStopActionPerformed

    private void buttonTCPCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTCPCloseActionPerformed
        try {
            ECGController.getController().stopClient();
            buttonTCPClose.setEnabled(false);
        } catch (IOException ex) {
            Logger.getLogger(JController.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al parar el cliente", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buttonTCPCloseActionPerformed

    private void buttonCloseAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCloseAllActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonCloseAllActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JController().setVisible(true);
            }
        });
    }

    public void processEventDevice (COMPortsEventObject args) {
        jTextData.setText(args.getMessage());
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField COMportNumber;
    private javax.swing.JTextField COMportSpeed;
    private javax.swing.JTextField alarmLevel;
    private javax.swing.JButton buttonAll;
    private javax.swing.JButton buttonBT;
    private javax.swing.JButton buttonBTClose;
    private javax.swing.JButton buttonCloseAll;
    private javax.swing.JButton buttonInit;
    private javax.swing.JButton buttonRX;
    private javax.swing.JButton buttonStart;
    private javax.swing.JButton buttonStop;
    private javax.swing.JButton buttonTCP;
    private javax.swing.JButton buttonTCPClose;
    private javax.swing.JButton buttonTX;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextData;
    private javax.swing.JCheckBox testCheck;
    private javax.swing.JTextField userState;
    // End of variables declaration//GEN-END:variables
    private int BTPortNumber;
    private int BTSpeed;
}
